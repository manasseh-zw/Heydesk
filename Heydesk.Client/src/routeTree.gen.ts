/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as OrgRouteRouteImport } from './routes/$org/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as SupportIndexRouteImport } from './routes/support/index'
import { Route as OnboardingIndexRouteImport } from './routes/onboarding/index'
import { Route as OrgIndexRouteImport } from './routes/$org/index'
import { Route as OnboardingSelectOrganizationRouteImport } from './routes/onboarding/select-organization'
import { Route as AuthSignupRouteImport } from './routes/auth/signup'
import { Route as AuthSigninRouteImport } from './routes/auth/signin'
import { Route as OrgTicketsRouteImport } from './routes/$org/tickets'
import { Route as OrgKnowledgeBaseRouteImport } from './routes/$org/knowledge-base'
import { Route as OrgAnalyticsRouteImport } from './routes/$org/analytics'
import { Route as OrgAgentsRouteImport } from './routes/$org/agents'
import { Route as SupportOrgRouteRouteImport } from './routes/support/$org/route'
import { Route as SupportOrgIndexRouteImport } from './routes/support/$org/index'
import { Route as AuthSupportSignupRouteImport } from './routes/auth/support/signup'
import { Route as AuthSupportSigninRouteImport } from './routes/auth/support/signin'

const OrgRouteRoute = OrgRouteRouteImport.update({
  id: '/$org',
  path: '/$org',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const SupportIndexRoute = SupportIndexRouteImport.update({
  id: '/support/',
  path: '/support/',
  getParentRoute: () => rootRouteImport,
} as any)
const OnboardingIndexRoute = OnboardingIndexRouteImport.update({
  id: '/onboarding/',
  path: '/onboarding/',
  getParentRoute: () => rootRouteImport,
} as any)
const OrgIndexRoute = OrgIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => OrgRouteRoute,
} as any)
const OnboardingSelectOrganizationRoute =
  OnboardingSelectOrganizationRouteImport.update({
    id: '/onboarding/select-organization',
    path: '/onboarding/select-organization',
    getParentRoute: () => rootRouteImport,
  } as any)
const AuthSignupRoute = AuthSignupRouteImport.update({
  id: '/auth/signup',
  path: '/auth/signup',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthSigninRoute = AuthSigninRouteImport.update({
  id: '/auth/signin',
  path: '/auth/signin',
  getParentRoute: () => rootRouteImport,
} as any)
const OrgTicketsRoute = OrgTicketsRouteImport.update({
  id: '/tickets',
  path: '/tickets',
  getParentRoute: () => OrgRouteRoute,
} as any)
const OrgKnowledgeBaseRoute = OrgKnowledgeBaseRouteImport.update({
  id: '/knowledge-base',
  path: '/knowledge-base',
  getParentRoute: () => OrgRouteRoute,
} as any)
const OrgAnalyticsRoute = OrgAnalyticsRouteImport.update({
  id: '/analytics',
  path: '/analytics',
  getParentRoute: () => OrgRouteRoute,
} as any)
const OrgAgentsRoute = OrgAgentsRouteImport.update({
  id: '/agents',
  path: '/agents',
  getParentRoute: () => OrgRouteRoute,
} as any)
const SupportOrgRouteRoute = SupportOrgRouteRouteImport.update({
  id: '/support/$org',
  path: '/support/$org',
  getParentRoute: () => rootRouteImport,
} as any)
const SupportOrgIndexRoute = SupportOrgIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => SupportOrgRouteRoute,
} as any)
const AuthSupportSignupRoute = AuthSupportSignupRouteImport.update({
  id: '/auth/support/signup',
  path: '/auth/support/signup',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthSupportSigninRoute = AuthSupportSigninRouteImport.update({
  id: '/auth/support/signin',
  path: '/auth/support/signin',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/$org': typeof OrgRouteRouteWithChildren
  '/support/$org': typeof SupportOrgRouteRouteWithChildren
  '/$org/agents': typeof OrgAgentsRoute
  '/$org/analytics': typeof OrgAnalyticsRoute
  '/$org/knowledge-base': typeof OrgKnowledgeBaseRoute
  '/$org/tickets': typeof OrgTicketsRoute
  '/auth/signin': typeof AuthSigninRoute
  '/auth/signup': typeof AuthSignupRoute
  '/onboarding/select-organization': typeof OnboardingSelectOrganizationRoute
  '/$org/': typeof OrgIndexRoute
  '/onboarding': typeof OnboardingIndexRoute
  '/support': typeof SupportIndexRoute
  '/auth/support/signin': typeof AuthSupportSigninRoute
  '/auth/support/signup': typeof AuthSupportSignupRoute
  '/support/$org/': typeof SupportOrgIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/$org/agents': typeof OrgAgentsRoute
  '/$org/analytics': typeof OrgAnalyticsRoute
  '/$org/knowledge-base': typeof OrgKnowledgeBaseRoute
  '/$org/tickets': typeof OrgTicketsRoute
  '/auth/signin': typeof AuthSigninRoute
  '/auth/signup': typeof AuthSignupRoute
  '/onboarding/select-organization': typeof OnboardingSelectOrganizationRoute
  '/$org': typeof OrgIndexRoute
  '/onboarding': typeof OnboardingIndexRoute
  '/support': typeof SupportIndexRoute
  '/auth/support/signin': typeof AuthSupportSigninRoute
  '/auth/support/signup': typeof AuthSupportSignupRoute
  '/support/$org': typeof SupportOrgIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/$org': typeof OrgRouteRouteWithChildren
  '/support/$org': typeof SupportOrgRouteRouteWithChildren
  '/$org/agents': typeof OrgAgentsRoute
  '/$org/analytics': typeof OrgAnalyticsRoute
  '/$org/knowledge-base': typeof OrgKnowledgeBaseRoute
  '/$org/tickets': typeof OrgTicketsRoute
  '/auth/signin': typeof AuthSigninRoute
  '/auth/signup': typeof AuthSignupRoute
  '/onboarding/select-organization': typeof OnboardingSelectOrganizationRoute
  '/$org/': typeof OrgIndexRoute
  '/onboarding/': typeof OnboardingIndexRoute
  '/support/': typeof SupportIndexRoute
  '/auth/support/signin': typeof AuthSupportSigninRoute
  '/auth/support/signup': typeof AuthSupportSignupRoute
  '/support/$org/': typeof SupportOrgIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/$org'
    | '/support/$org'
    | '/$org/agents'
    | '/$org/analytics'
    | '/$org/knowledge-base'
    | '/$org/tickets'
    | '/auth/signin'
    | '/auth/signup'
    | '/onboarding/select-organization'
    | '/$org/'
    | '/onboarding'
    | '/support'
    | '/auth/support/signin'
    | '/auth/support/signup'
    | '/support/$org/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/$org/agents'
    | '/$org/analytics'
    | '/$org/knowledge-base'
    | '/$org/tickets'
    | '/auth/signin'
    | '/auth/signup'
    | '/onboarding/select-organization'
    | '/$org'
    | '/onboarding'
    | '/support'
    | '/auth/support/signin'
    | '/auth/support/signup'
    | '/support/$org'
  id:
    | '__root__'
    | '/'
    | '/$org'
    | '/support/$org'
    | '/$org/agents'
    | '/$org/analytics'
    | '/$org/knowledge-base'
    | '/$org/tickets'
    | '/auth/signin'
    | '/auth/signup'
    | '/onboarding/select-organization'
    | '/$org/'
    | '/onboarding/'
    | '/support/'
    | '/auth/support/signin'
    | '/auth/support/signup'
    | '/support/$org/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  OrgRouteRoute: typeof OrgRouteRouteWithChildren
  SupportOrgRouteRoute: typeof SupportOrgRouteRouteWithChildren
  AuthSigninRoute: typeof AuthSigninRoute
  AuthSignupRoute: typeof AuthSignupRoute
  OnboardingSelectOrganizationRoute: typeof OnboardingSelectOrganizationRoute
  OnboardingIndexRoute: typeof OnboardingIndexRoute
  SupportIndexRoute: typeof SupportIndexRoute
  AuthSupportSigninRoute: typeof AuthSupportSigninRoute
  AuthSupportSignupRoute: typeof AuthSupportSignupRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/$org': {
      id: '/$org'
      path: '/$org'
      fullPath: '/$org'
      preLoaderRoute: typeof OrgRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/support/': {
      id: '/support/'
      path: '/support'
      fullPath: '/support'
      preLoaderRoute: typeof SupportIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/onboarding/': {
      id: '/onboarding/'
      path: '/onboarding'
      fullPath: '/onboarding'
      preLoaderRoute: typeof OnboardingIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/$org/': {
      id: '/$org/'
      path: '/'
      fullPath: '/$org/'
      preLoaderRoute: typeof OrgIndexRouteImport
      parentRoute: typeof OrgRouteRoute
    }
    '/onboarding/select-organization': {
      id: '/onboarding/select-organization'
      path: '/onboarding/select-organization'
      fullPath: '/onboarding/select-organization'
      preLoaderRoute: typeof OnboardingSelectOrganizationRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/signup': {
      id: '/auth/signup'
      path: '/auth/signup'
      fullPath: '/auth/signup'
      preLoaderRoute: typeof AuthSignupRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/signin': {
      id: '/auth/signin'
      path: '/auth/signin'
      fullPath: '/auth/signin'
      preLoaderRoute: typeof AuthSigninRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/$org/tickets': {
      id: '/$org/tickets'
      path: '/tickets'
      fullPath: '/$org/tickets'
      preLoaderRoute: typeof OrgTicketsRouteImport
      parentRoute: typeof OrgRouteRoute
    }
    '/$org/knowledge-base': {
      id: '/$org/knowledge-base'
      path: '/knowledge-base'
      fullPath: '/$org/knowledge-base'
      preLoaderRoute: typeof OrgKnowledgeBaseRouteImport
      parentRoute: typeof OrgRouteRoute
    }
    '/$org/analytics': {
      id: '/$org/analytics'
      path: '/analytics'
      fullPath: '/$org/analytics'
      preLoaderRoute: typeof OrgAnalyticsRouteImport
      parentRoute: typeof OrgRouteRoute
    }
    '/$org/agents': {
      id: '/$org/agents'
      path: '/agents'
      fullPath: '/$org/agents'
      preLoaderRoute: typeof OrgAgentsRouteImport
      parentRoute: typeof OrgRouteRoute
    }
    '/support/$org': {
      id: '/support/$org'
      path: '/support/$org'
      fullPath: '/support/$org'
      preLoaderRoute: typeof SupportOrgRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/support/$org/': {
      id: '/support/$org/'
      path: '/'
      fullPath: '/support/$org/'
      preLoaderRoute: typeof SupportOrgIndexRouteImport
      parentRoute: typeof SupportOrgRouteRoute
    }
    '/auth/support/signup': {
      id: '/auth/support/signup'
      path: '/auth/support/signup'
      fullPath: '/auth/support/signup'
      preLoaderRoute: typeof AuthSupportSignupRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/support/signin': {
      id: '/auth/support/signin'
      path: '/auth/support/signin'
      fullPath: '/auth/support/signin'
      preLoaderRoute: typeof AuthSupportSigninRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

interface OrgRouteRouteChildren {
  OrgAgentsRoute: typeof OrgAgentsRoute
  OrgAnalyticsRoute: typeof OrgAnalyticsRoute
  OrgKnowledgeBaseRoute: typeof OrgKnowledgeBaseRoute
  OrgTicketsRoute: typeof OrgTicketsRoute
  OrgIndexRoute: typeof OrgIndexRoute
}

const OrgRouteRouteChildren: OrgRouteRouteChildren = {
  OrgAgentsRoute: OrgAgentsRoute,
  OrgAnalyticsRoute: OrgAnalyticsRoute,
  OrgKnowledgeBaseRoute: OrgKnowledgeBaseRoute,
  OrgTicketsRoute: OrgTicketsRoute,
  OrgIndexRoute: OrgIndexRoute,
}

const OrgRouteRouteWithChildren = OrgRouteRoute._addFileChildren(
  OrgRouteRouteChildren,
)

interface SupportOrgRouteRouteChildren {
  SupportOrgIndexRoute: typeof SupportOrgIndexRoute
}

const SupportOrgRouteRouteChildren: SupportOrgRouteRouteChildren = {
  SupportOrgIndexRoute: SupportOrgIndexRoute,
}

const SupportOrgRouteRouteWithChildren = SupportOrgRouteRoute._addFileChildren(
  SupportOrgRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  OrgRouteRoute: OrgRouteRouteWithChildren,
  SupportOrgRouteRoute: SupportOrgRouteRouteWithChildren,
  AuthSigninRoute: AuthSigninRoute,
  AuthSignupRoute: AuthSignupRoute,
  OnboardingSelectOrganizationRoute: OnboardingSelectOrganizationRoute,
  OnboardingIndexRoute: OnboardingIndexRoute,
  SupportIndexRoute: SupportIndexRoute,
  AuthSupportSigninRoute: AuthSupportSigninRoute,
  AuthSupportSignupRoute: AuthSupportSignupRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
